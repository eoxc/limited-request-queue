{"version":3,"file":"index.js","names":["DEFAULT_OPTIONS","Object","freeze","maxSockets","Infinity","maxSocketsPerHost","rateLimit","END_EVENT","ITEM_EVENT","RequestQueue","options","id","item","undefined","active","url","data","isURL","lenient","TypeError","hostKey","normalizeURL","itemID","lifo","unshift","push","length","EventEmitter","itemIndex","indexOf","splice","event","args","timeout","setTimeout","availableSockets","i","canStart"],"sources":["../lib/index.js"],"sourcesContent":["import {EventEmitter} from \"events\";\nimport isURL from \"isurl\";\nimport normalizeURL from \"./normalizeURL\";\n\n\n\nexport const DEFAULT_OPTIONS = Object.freeze(\n{\n\tmaxSockets: Infinity,\n\tmaxSocketsPerHost: 2,\n\trateLimit: 0\n});\n\nexport const END_EVENT = \"end\";\nexport const ITEM_EVENT = \"item\";\n\n\n\nexport default class RequestQueue extends EventEmitter\n{\n\t#activeHosts = {};    // Socket counts stored by host\n\t#items = {};          // Items stored by ID\n\t#priorityQueue = [];  // List of IDs\n\n\t#activeSockets = 0;\n\t#idCounter = 0;  // it'd take centuries to exceed MAX_SAFE_INTEGER\n\t#isPaused = false;\n\t#options;\n\n\n\n\tconstructor(options)\n\t{\n\t\tsuper();\n\t\tthis.#options = { ...DEFAULT_OPTIONS, ...options };\n\t}\n\n\n\n\tdequeue(id)\n\t{\n\t\tconst item = this.#items[id];\n\n\t\tif (item===undefined || item.active)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#dequeueItem(item);\n\t\t\tthis.#removeItem(item);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Remove item (id) from queue, but nowhere else.\n\t * @param {object} item\n\t */\n\t#dequeueItem({id})\n\t{\n\t\tconst itemIndex = this.#priorityQueue.indexOf(id);\n\n\t\tthis.#priorityQueue.splice(itemIndex, 1);\n\t}\n\n\n\n\t/**\n\t * Emit an event, synchronously or asynchronously.\n\t * @param {string} event\n\t * @param {Array} args\n\t * @param {number} timeout\n\t */\n\t#emit2(event, args, timeout)\n\t{\n\t\tif (timeout > 0)\n\t\t{\n\t\t\tsetTimeout(() => super.emit(event, ...args), timeout);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper.emit(event, ...args);\n\t\t}\n\t}\n\n\n\n\tenqueue(url, data, options)\n\t{\n\t\tif (!isURL.lenient(url))\n\t\t{\n\t\t\tthrow new TypeError(\"Invalid URL\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst hostKey = normalizeURL(url, this.#options, options);\n\t\t\tconst id = options?.itemID ?? this.#idCounter++;\n\n\t\t\tthis.#items[id] = { active:false, data, hostKey, id, options, url };\n\t\t\tif (options.lifo)\n\t\t\t{\n\t\t\t\tthis.#priorityQueue.unshift(id);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.#priorityQueue.push(id);\n\t\t\t}\n\n\t\t\tthis.#maybeStartNext();\n\n\t\t\treturn id;\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Generate a `done()` function for use in resuming the queue when an item's\n\t * process has been completed.\n\t * @param {object} item\n\t * @returns {Function}\n\t */\n\t#getDoneCallback(item)\n\t{\n\t\treturn () =>\n\t\t{\n\t\t\tthis.#activeSockets--;\n\t\t\tthis.#removeItem(item);\n\t\t\tthis.#maybeStartNext();\n\t\t};\n\t}\n\n\n\n\thas(id)\n\t{\n\t\treturn id in this.#items;\n\t}\n\n\n\n\tget isPaused()\n\t{\n\t\treturn this.#isPaused;\n\t}\n\n\n\n\tget length()\n\t{\n\t\treturn this.#priorityQueue.length + this.#activeSockets;\n\t}\n\n\n\n\t/**\n\t * Start the next queue item, if it exists and if it passes any limiting.\n\t */\n\t#maybeStartNext()\n\t{\n\t\tlet availableSockets = this.#options.maxSockets - this.#activeSockets;\n\n\t\tif (!this.#isPaused && availableSockets>0)\n\t\t{\n\t\t\tlet i = 0;\n\n\t\t\twhile (i < this.#priorityQueue.length)\n\t\t\t{\n\t\t\t\tlet canStart = false;\n\t\t\t\tconst item = this.#items[ this.#priorityQueue[i] ];\n\n\t\t\t\tconst maxSocketsPerHost = item.options?.maxSocketsPerHost ?? this.#options.maxSocketsPerHost;\n\n\t\t\t\t// Not important, but feature complete\n\t\t\t\tif (maxSocketsPerHost > 0)\n\t\t\t\t{\n\t\t\t\t\tif (typeof this.#activeHosts[item.hostKey] === 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\t// Create key with first count\n\t\t\t\t\t\tthis.#activeHosts[item.hostKey] = 1;\n\t\t\t\t\t\tcanStart = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.#activeHosts[item.hostKey] < maxSocketsPerHost)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#activeHosts[item.hostKey]++;\n\t\t\t\t\t\tcanStart = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (canStart)\n\t\t\t\t{\n\t\t\t\t\tthis.#activeSockets++;\n\t\t\t\t\tavailableSockets--;\n\n\t\t\t\t\titem.active = true;\n\n\t\t\t\t\tthis.#dequeueItem(item);\n\n\t\t\t\t\tconst rateLimit = item.options?.rateLimit ?? this.#options.rateLimit;\n\t\t\t\t\t\n\t\t\t\t\tthis.#emit2(ITEM_EVENT, [item.url, item.data, this.#getDoneCallback(item), item.id], rateLimit);\n\n\t\t\t\t\tif (availableSockets <= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Move onto next\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\tget numActive()\n\t{\n\t\treturn this.#activeSockets;\n\t}\n\n\n\n\tget numQueued()\n\t{\n\t\treturn this.#priorityQueue.length;\n\t}\n\n\n\n\tpause()\n\t{\n\t\tthis.#isPaused = true;\n\t\treturn this;\n\t}\n\n\n\n\t/**\n\t * Remove item from item list and activeHosts.\n\t * @param {object} item\n\t */\n\t#removeItem({hostKey, id})\n\t{\n\t\tif (this.#items[id].active && typeof this.#activeHosts[hostKey] !== 'undefined')\n\t\t{\n\t\t\tif (--this.#activeHosts[hostKey] <= 0) {\n\t\t\t\tdelete this.#activeHosts[hostKey];\t\n\t\t\t}\n\t\t}\n\n\t\tdelete this.#items[id];\n\n\t\tif (this.#priorityQueue.length<=0 && this.#activeSockets<=0)\n\t\t{\n\t\t\tthis.#idCounter = 0;  // reset\n\n\t\t\tsuper.emit(END_EVENT);\n\t\t}\n\t}\n\n\n\n\tresume()\n\t{\n\t\tthis.#isPaused = false;\n\t\tthis.#maybeStartNext();\n\t\treturn this;\n\t}\n}\n"],"mappings":"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"}